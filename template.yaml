AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  bmpproductslambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 512
      Timeout: 15
      Handler: com.bernmpdev.productslambda.BookHandler::handleRequest
      Runtime: java17
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:BatchGetItem
                - dynamodb:GetItem
                - dynamodb:Query
                - dynamodb:Scan
                - dynamodb:BatchWriteItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
              Resource: arn:aws:dynamodb:us-east-2:199299155478:table/Books
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: arn:aws:logs:us-east-2:199299155478:*
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: '*'
            - Effect: Allow
              Action:
                - xray:PutTraceSegments
                - xray:PutTelemetryRecords
                - xray:GetSamplingRules
                - xray:GetSamplingTargets
                - xray:GetSamplingStatisticSummaries
              Resource: '*'
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
              Resource: arn:aws:s3:::*
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource: '*'
              Condition:
                StringLike:
                  iam:PassedToService:
                    - lambda.amazonaws.com
            - Effect: Allow
              Action:
                - s3:*
                - s3-object-lambda:*
              Resource: '*'
      SnapStart:
        ApplyOn: None
      Events:
        PostBooks:
          Type: Api
          Properties:
            Path: /books
            Method: POST
        UpdateBooks:
          Type: Api
          Properties:
            Path: /books
            Method: PATCH
        GetAllBooks:
          Type: Api
          Properties:
            Path: /books
            Method: GET
        GetBookById:
          Type: Api
          Properties:
            Path: /books/{bookId}
            Method: GET
        DeleteBooks:
          Type: Api
          Properties:
            Path: /books/{bookId}
            Method: DELETE
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
